name: Weekly ESPN Data Update
on:
  schedule:
    - cron: '0 14 * * 0'  # Sunday 2 PM UTC
  workflow_dispatch:      # Manual trigger

jobs:
  update-espn-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # CRITICAL - without this, commits fail
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Ensure latest fighters list
      run: |
        echo "Ensuring fighters_name.csv is up to date..."
        
        # Check if we need to pull from A0-roosterwatch
        if [ ! -f "data/fighters_name.csv" ] || [ $(find "data/fighters_name.csv" -mtime +1 2>/dev/null | wc -l) -gt 0 ]; then
          echo "fighters_name.csv is missing or outdated, pulling from A0-roosterwatch..."
          
          # Checkout A0-roosterwatch temporarily
          git clone --depth 1 https://github.com/mmamodelai/A0-roosterwatch.git temp-a0
          
          if [ -f "temp-a0/A0 optional activefighters/data/fighters_name.csv" ]; then
            cp "temp-a0/A0 optional activefighters/data/fighters_name.csv" "data/fighters_name.csv"
            echo "‚úÖ Updated fighters_name.csv from A0-roosterwatch"
          else
            echo "‚ö†Ô∏è  Could not find fighters_name.csv in A0-roosterwatch, using existing"
          fi
          
          # Clean up
          rm -rf temp-a0
        else
          echo "‚úÖ fighters_name.csv is up to date"
        fi
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run ESPN Data Processor
      run: |
        echo "üöÄ Starting Weekly ESPN Data Update at $(date)"
        echo "üìã This will scrape:"
        echo "   ‚úÖ Fighter Profiles (basic info, records, stats)"
        echo "   ‚úÖ Clinch Data (clinch striking, grappling)"
        echo "   ‚úÖ Ground Data (ground fighting stats)"
        echo "   ‚úÖ Striking Data (distance striking stats)"
        echo "   ‚úÖ HTML Files (complete ESPN pages)"
        echo ""
        
        python run_espn_processor.py --data-type all
        
        echo "‚úÖ Weekly ESPN Data Update completed at $(date)"
        
    - name: Show Data Summary
      run: |
        echo "üìä Final Data Summary:"
        python -c "import sys; sys.path.append('src'); from espn_data_processor import ESPNDataProcessor; processor = ESPNDataProcessor(); summary = processor.get_data_summary(); [print(f'  {key}: {value}') for key, value in summary.items()]"
        
    - name: Verify output files
      run: |
        echo "üîç Verifying output files..."
        echo ""
        
        # Check HTML files
        if [ -d "data/FighterHTMLs" ]; then
          html_count=$(find data/FighterHTMLs -name "*.html" | wc -l)
          echo "üìÅ HTML files: $html_count"
          
          # Check for small files
          small_files=$(find data/FighterHTMLs -name "*.html" -size -5k | wc -l)
          if [ $small_files -eq 0 ]; then
            echo "‚úÖ No small HTML files (<5KB) found"
          else
            echo "‚ö†Ô∏è  Found $small_files small HTML files (<5KB)"
          fi
        else
          echo "‚ùå FighterHTMLs directory not found"
        fi
        
        # Check CSV files
        echo ""
        echo "üìä CSV Output Files:"
        for file in data/*.csv; do
          if [ -f "$file" ]; then
            size=$(ls -lh "$file" | awk '{print $5}')
            lines=$(wc -l < "$file")
            echo "   $(basename "$file"): $lines lines ($size)"
          fi
        done
        
    - name: Check for changes
      id: check_changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "no_changes=true" >> $GITHUB_OUTPUT
        else
          echo "no_changes=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.check_changes.outputs.no_changes == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Weekly ESPN data update with all data types - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        git push
        
    - name: No changes notification
      if: steps.check_changes.outputs.no_changes == 'true'
      run: |
        echo "‚úÖ No changes detected - data is up to date"
        
    - name: Summary
      run: |
        echo ""
        echo "üéØ Weekly ESPN Update Summary:"
        echo "üìÅ Repository: A1-ESPN-Profiles"
        echo "üìã Data Types: Profiles, Clinch, Ground, Striking, HTML"
        echo "‚è∞ Completed: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "üîÑ Next Update: Sunday 2 PM UTC"
        echo "‚úÖ Pipeline: Complete" 