name: 3. Process Fighter Profiles

on:
  schedule:
    - cron: '0 7 * * 1'  # Monday 7 AM UTC (after living data)
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode with 24 fighters (faster)'
        required: false
        default: true
        type: boolean

jobs:
  process-fighter-profiles:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Verify prerequisites
      run: |
        echo "üîç Checking prerequisites..."
        
        # Check HTML files
        if [ -d "data/FighterHTMLs" ]; then
          html_count=$(find data/FighterHTMLs -name "*.html" | wc -l)
          echo "‚úÖ Found $html_count HTML files"
        else
          echo "‚ùå FighterHTMLs directory not found - run '1. Scrape ESPN' workflow first"
          exit 1
        fi
        
        # Check living documents
        missing_files=0
        for file in data/striking_data_living.csv data/clinch_data_living.csv data/ground_data_living.csv; do
          if [ -f "$file" ]; then
            echo "‚úÖ Found $(basename "$file")"
          else
            echo "‚ùå Missing $(basename "$file") - run '2. Process Living Data' workflow first"
            missing_files=$((missing_files + 1))
          fi
        done
        
        if [ $missing_files -gt 0 ]; then
          echo "‚ùå Missing $missing_files living document(s) - run previous workflows first"
          exit 1
        fi
        
        echo "‚úÖ All prerequisites met"
        
    - name: Extract fighter statistics from HTML
      run: |
        echo "üìä Extracting detailed fighter statistics from HTML..."
        echo "üìã This will extract:"
        echo "   ‚úÖ Career statistics (strikes, takedowns, accuracy)"
        echo "   ‚úÖ Personal information (age, height, weight, reach)"
        echo "   ‚úÖ Fight records and win methods"
        echo ""
        
        python extract_stats_from_html.py
        
        echo "‚úÖ Fighter statistics extraction completed at $(date)"
        
    - name: Enhance fighter profiles
      run: |
        echo "üîß Enhancing fighter profiles with additional data..."
        echo "üìã This will add:"
        echo "   ‚úÖ Rate calculations (per-minute, per-15-minute)"
        echo "   ‚úÖ Defensive percentages"
        echo "   ‚úÖ Win method breakdowns"
        echo "   ‚úÖ Target breakdowns (head, body, legs)"
        echo ""
        
        # Run enhancement scripts if they exist
        if [ -f "enhance_fighter_profiles.py" ]; then
          python enhance_fighter_profiles.py
          echo "‚úÖ Fighter profiles enhanced"
        else
          echo "‚ö†Ô∏è  enhance_fighter_profiles.py not found, skipping enhancement"
        fi
        
        if [ -f "extract_missing_fields.py" ]; then
          python extract_missing_fields.py
          echo "‚úÖ Missing fields extracted"
        else
          echo "‚ö†Ô∏è  extract_missing_fields.py not found, skipping missing fields"
        fi
        
    - name: Verify fighter profiles
      run: |
        echo "üîç Verifying fighter profiles..."
        echo ""
        
        # Check fighter profiles
        echo "üìä Fighter Profiles:"
        for file in data/fighter_profiles.csv data/enhanced_fighter_profiles*.csv; do
          if [ -f "$file" ]; then
            size=$(ls -lh "$file" | awk '{print $5}')
            lines=$(wc -l < "$file")
            echo "   $(basename "$file"): $lines fighters ($size)"
          fi
        done
        
        # Show sample profile
        echo ""
        echo "üìã Sample fighter profile:"
        if [ -f "data/fighter_profiles.csv" ]; then
          head -2 data/fighter_profiles.csv | tail -1
        fi
        
    - name: Create backup of fighter profiles
      run: |
        echo "üíæ Creating backup of fighter profiles..."
        timestamp=$(date +"%Y%m%d_%H%M%S")
        mkdir -p "data/backups/backup_${timestamp}"
        
        for file in data/fighter_profiles.csv data/enhanced_fighter_profiles*.csv; do
          if [ -f "$file" ]; then
            cp "$file" "data/backups/backup_${timestamp}/"
            echo "‚úÖ Backed up $(basename "$file")"
          fi
        done
        
        echo "‚úÖ Backup created: backup_${timestamp}"
        
    - name: Commit and push fighter profiles
      run: |
        echo "üöÄ Committing fighter profiles..."
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add fighter profiles and backups
        git add data/fighter_profiles.csv data/enhanced_fighter_profiles*.csv || echo "No fighter profiles to add"
        git add data/backups/ || echo "No backups to add"
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to fighter profiles to commit"
        else
          # Commit with timestamp
          timestamp=$(date +"%Y-%m-%d %H:%M:%S")
          git commit -m "üë§ Fighter Profiles: Enhanced with detailed stats - $timestamp"
          
          # Push changes
          git push
          echo "‚úÖ Fighter profiles committed and pushed"
        fi
        
    - name: Generate final summary
      run: |
        echo ""
        echo "üéØ Fighter Profiles Processing Summary:"
        echo "üìÅ Repository: A1-ESPN-Profiles"
        echo "üìã Output: Enhanced fighter profiles with detailed statistics"
        echo "‚è∞ Completed: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo ""
        echo "üìä Final Data Summary:"
        
        # Count records
        if [ -f "data/striking_data_living.csv" ]; then
          striking_count=$(wc -l < data/striking_data_living.csv)
          echo "   Striking Records: $((striking_count - 1)) fights"
        fi
        
        if [ -f "data/clinch_data_living.csv" ]; then
          clinch_count=$(wc -l < data/clinch_data_living.csv)
          echo "   Clinch Records: $((clinch_count - 1)) fights"
        fi
        
        if [ -f "data/ground_data_living.csv" ]; then
          ground_count=$(wc -l < data/ground_data_living.csv)
          echo "   Ground Records: $((ground_count - 1)) fights"
        fi
        
        if [ -f "data/fighter_profiles.csv" ]; then
          profile_count=$(wc -l < data/fighter_profiles.csv)
          echo "   Fighter Profiles: $((profile_count - 1)) fighters"
        fi
        
        echo ""
        echo "‚úÖ Pipeline: Complete - All 3 steps finished!"
        echo "üéâ ESPN MMA Data System is fully updated" 