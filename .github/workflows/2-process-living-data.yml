name: 2. Process Living Data

on:
  schedule:
    - cron: '30 6 * * 1'  # Monday 6:30 AM UTC (after scraping)
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode with 24 fighters (faster)'
        required: false
        default: true
        type: boolean

jobs:
  process-living-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "import pandas; print('Dependencies installed successfully')"
        
    - name: Verify HTML files exist
      run: |
        echo "üîç Checking HTML files..."
        
        if [ -d "data/FighterHTMLs" ]; then
          html_count=$(find data/FighterHTMLs -name "*.html" | wc -l)
          echo "‚úÖ Found $html_count HTML files"
          
          if [ $html_count -eq 0 ]; then
            echo "‚ùå No HTML files found - run '1. Scrape ESPN' workflow first"
            exit 1
          fi
          
          # Show sample files
          echo "üìã Sample HTML files:"
          find data/FighterHTMLs -name "*.html" | head -5
        else
          echo "‚ùå FighterHTMLs directory not found - run '1. Scrape ESPN' workflow first"
          exit 1
        fi
        
    - name: Process HTML to living documents
      run: |
        echo "üîÑ Processing HTML files to living documents..."
        echo "üìã This will create:"
        echo "   ‚úÖ Striking Data (distance striking stats)"
        echo "   ‚úÖ Clinch Data (clinch striking, grappling)"
        echo "   ‚úÖ Ground Data (ground fighting stats)"
        echo ""
        
        python -c "
        from src.espn_data_processor import ESPNDataProcessor
        processor = ESPNDataProcessor('data')
        new_count, updated_count = processor.process_fighter_htmls()
        print(f'‚úÖ Living documents processed successfully: {new_count} new, {updated_count} updated')
        "
        
        echo "‚úÖ Living data processing completed at $(date)"
        
    - name: Verify living documents
      run: |
        echo "üîç Verifying living documents..."
        echo ""
        
        # Check CSV files
        echo "üìä Living Documents:"
        for file in data/striking_data_living.csv data/clinch_data_living.csv data/ground_data_living.csv; do
          if [ -f "$file" ]; then
            size=$(ls -lh "$file" | awk '{print $5}')
            lines=$(wc -l < "$file")
            echo "   $(basename "$file"): $lines records ($size)"
          else
            echo "   ‚ùå $(basename "$file"): Not found"
          fi
        done
        
        # Show recent data
        echo ""
        echo "üìã Recent fight data:"
        if [ -f "data/striking_data_living.csv" ]; then
          echo "Latest 3 fights from striking data:"
          tail -4 data/striking_data_living.csv | head -3
        fi
        
    - name: Create backup of living files
      run: |
        echo "üíæ Creating backup of living files..."
        timestamp=$(date +"%Y%m%d_%H%M%S")
        mkdir -p "data/backups/backup_${timestamp}"
        
        for file in data/striking_data_living.csv data/clinch_data_living.csv data/ground_data_living.csv; do
          if [ -f "$file" ]; then
            cp "$file" "data/backups/backup_${timestamp}/"
            echo "‚úÖ Backed up $(basename "$file")"
          fi
        done
        
        echo "‚úÖ Backup created: backup_${timestamp}"
        
    - name: Commit and push living documents
      run: |
        echo "üöÄ Committing living documents..."
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add living documents and backups
        git add data/striking_data_living.csv data/clinch_data_living.csv data/ground_data_living.csv || echo "No living documents to add"
        git add data/backups/ || echo "No backups to add"
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to living documents to commit"
        else
          # Commit with timestamp
          timestamp=$(date +"%Y-%m-%d %H:%M:%S")
          git commit -m "üìä Living Data: Striking/Clinch/Ground - $timestamp"
          
          # Push changes
          git push
          echo "‚úÖ Living documents committed and pushed"
        fi
        
    - name: Summary
      run: |
        echo ""
        echo "üéØ Living Data Processing Summary:"
        echo "üìÅ Repository: A1-ESPN-Profiles"
        echo "üìã Output: Striking, Clinch, Ground living documents"
        echo "‚è∞ Completed: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "üîÑ Next step: Run '3. Process Fighter Profiles' workflow"
        echo "‚úÖ Pipeline: Step 2 Complete" 